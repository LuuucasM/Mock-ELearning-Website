from django.contrib import admin
from django.urls import path
from django.conf.urls import url
from rest_framework.authtoken.views import obtain_auth_token
from .views import *

urlpatterns = [
    # ---- LOGIN STUFF ----
    path('auth/login/',
         AuthToken.as_view(),
         name='auth_user_login'),
    path('auth/register/',
         CreateUserAPIView.as_view(),
         name='auth_user_create'),
    path('auth/logout/',
         LogoutUserAPIView.as_view(),
         name='auth_user_logout'),
    # ---- User Profile ----
    path('users/',
         GetUsersInfoAPIView.as_view()
         ),
    path('profile/<slug:id>/',
         GetProfileView.as_view()
         ),
    # ---- COURSE STUFF ----
    path('course/create/',
         CreateCourseAPIView.as_view(),
         name='course_create'),
    path('course/',
         RetrieveCourseListAPIView.as_view(),
         name='course_get_many'),
    path('course/browse/',
         RetrieveAllCourseListAPIView.as_view(),
         name='course_get_all'),
    path('course/create/',
         CreateCourseAPIView.as_view(),
         name='course_create'),
    path('course/<int:id>/',
         RetrieveCourseDetailsAPIView.as_view(),
         name='course_get'),
    path('course/<int:id>/enroll/',
         EnrollInCourseAPIView.as_view(),
         name='enroll_class'),
    path('course/<int:course_id>/unenroll/',
         UnEnrollCourseAPIView.as_view(),
         name='unenroll_class'),
    path('course/<int:id>/module/',
         RetrieveModuleListAPIView.as_view(),
         name='module_get_many'),
    path('course/<int:id>/module/create/',
         CreateModuleAPIView.as_view(),
         name='module_create'),
    path('course/<int:id>/module/<int:mid>/',
         ModuleAPIView.as_view(),
         name='module_view'),
    path('course/<int:id>/module/<int:mid>/create/',
         CreateModuleItemAPIView.as_view(),
         name='moduleitem_create'),
    path('course/<int:id>/module/<int:mid>/<int:pid>/',
         ModuleItemAPIView.as_view(),
         name='moduleitem_update'),
    path('course/<int:id>/module/<int:mid>/<int:pid>/edit/',
         UpdateAssignmentMarkAPIView.as_view(),
         name='assignment_update'),
    path('course/<int:id>/module/<int:mid>/<int:pid>/mark/',
         RetrieveAssignmentMarkAPIView.as_view(),
         name='assignment_view'),
    # ---- SOCIAL NETWORK STUFF ----
    path('user/network/<slug:profile_id>/',
         SocialsAPIView.as_view(),
         name='add_network'),
    path('user/network/',
         GetNetworkView.as_view(),
         name='get_network'
         ),
    # ---- COMMENT / POST STUFF ----
    path('user/comment/create/<str:object_type>/<int:object_id>/',
         CreateCommentAPIView.as_view(),
         name='create_comment'),
    path('user/comment/display/<str:object_type>/<int:object_id>/',
         DisplayCommentsAPIView.as_view(),
         name='display_comments'),
    path('user/post/create/',
         CreatePostAPIView.as_view(),
         name='create_post'),
    path('user/post/display/<int:profile_id>/',
         DisplayPostAPIView.as_view(),
         name='display_post'),
    path('user/editpost/<str:object_type>/<int:object_id>/',
          EditPostCommentAPIView.as_view(),
          name='edit_post_comment'),
    path('user/like/<str:object_type>/<int:object_id>/',
         ToLikeAPIView.as_view(),
         name='like'),
    path('user/unlike/<str:object_type>/<int:object_id>/',
         UnLikeAPIView.as_view(),
         name='unlike'),
    path('user/getlike/<str:object_type>/<int:object_id>/',
         GetIfLikedAPIView.as_view(),
         name='get_like'),
    # ---- DELETE ----
    path('delete/<str:object_type>/<int:object_id>/',
         DeleteObjectAPIView.as_view(),
         name='delete_post')
]
